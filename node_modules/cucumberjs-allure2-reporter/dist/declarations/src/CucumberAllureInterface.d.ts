/// <reference types="node" />
import { AllureInterface, AllureStep, ContentType, GlobalInfoWriter, Severity } from "allure2-js-commons";
import { CucumberJSAllureFormatter } from "./CucumberJSAllureReporter";
export declare class CucumberAllureInterface extends AllureInterface {
    private readonly reporter;
    constructor(reporter: CucumberJSAllureFormatter);
    private readonly currentExecutable;
    private readonly currentTest;
    setDescription(text: string): void;
    setTestDescription(text: string): void;
    setFlaky(): void;
    setKnown(): void;
    setMuted(): void;
    addOwner(owner: string): void;
    setSeverity(severity: Severity): void;
    addIssue(issue: string): void;
    addTag(tag: string): void;
    addTestType(type: string): void;
    addLink(name: string, url: string, type?: string): void;
    private startStep;
    step<T>(name: string, body: () => any): any;
    attachment(name: string, content: Buffer | string, type: ContentType): void;
    testAttachment(name: string, content: Buffer | string, type: ContentType): void;
    addParameter(name: string, value: string): void;
    addLabel(name: string, value: string): void;
    getGlobalInfoWriter(): GlobalInfoWriter;
}
export declare class WrappedStep {
    private readonly reporter;
    private readonly step;
    constructor(reporter: CucumberJSAllureFormatter, step: AllureStep);
    startStep(name: string): WrappedStep;
    endStep(): void;
    run<T>(body: () => T): T;
}
